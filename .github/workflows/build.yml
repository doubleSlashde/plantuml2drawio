name: Build Executables

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-build.txt

      - name: Update version numbers
        shell: python
        run: |
          import re, os
          from datetime import datetime
          version = os.environ['GITHUB_REF'].split('/')[-1].replace('v', '')
          files_to_update = [
              'src/plantuml2drawio/app.py',
              'src/plantuml2drawio/config.py',
              'src/plantuml2drawio/__init__.py',
              'setup.py'
          ]
          for path in files_to_update:
              txt = open(path, encoding='utf-8').read()
              txt = re.sub(r'VERSION = "[^"]*"', f'VERSION = "{version}"', txt)
              txt = re.sub(r'__version__ = "[^"]*"', f'__version__ = "{version}"', txt)
              txt = re.sub(r'version="[^"]*"', f'version="{version}"', txt)
              if path.endswith('config.py'):
                  txt = re.sub(r'VERSION_DATE = "[^"]*"', f'VERSION_DATE = "{datetime.now():%Y-%m-%d}"', txt)
              open(path, 'w', encoding='utf-8').write(txt)

      - name: Build Windows executable
        run: |
          python build_windows.py
        shell: powershell
        working-directory: build-scripts

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: p2d-windows
          path: dist/windows/PlantUML2DrawIO/**
          if-no-files-found: error

  #build-macos:
  #  runs-on: macos-latest
  #  steps:
  #    - uses: actions/checkout@v4

  #    - name: Set up Python
  #      uses: actions/setup-python@v5
  #      with:
  #        python-version: '3.11'

  #    - name: Install dependencies
  #      run: |
  #        python -m pip install --upgrade pip
  #        pip install -r requirements-build.txt

  #    - name: Update version numbers
  #      shell: python
  #      run: |
  #        import re
  #        import os
  #        from datetime import datetime

  #       # Get version from git tag
  #        version = os.environ['GITHUB_REF'].split('/')[-1].replace('v', '')

          # Update version in files
  #        files_to_update = [
  #            'src/plantuml2drawio/app.py',
  #            'src/plantuml2drawio/config.py',
  #            'src/plantuml2drawio/__init__.py',
  #            'setup.py'
  #        ]

  #        for file_path in files_to_update:
  #            with open(file_path, 'r', encoding='utf-8') as f:
  #                content = f.read()

              # Update version strings
  #            content = re.sub(r'VERSION = "[^"]*"', f'VERSION = "{version}"', content)
  #            content = re.sub(r'__version__ = "[^"]*"', f'__version__ = "{version}"', content)
  #            content = re.sub(r'version="[^"]*"', f'version="{version}"', content)

              # Update version date in config.py
  #            if 'config.py' in file_path:
  #                today = datetime.now().strftime('%Y-%m-%d')
  #                content = re.sub(r'VERSION_DATE = "[^"]*"', f'VERSION_DATE = "{today}"', content)

  #            with open(file_path, 'w', encoding='utf-8') as f:
  #                f.write(content)

  #    - name: Build macOS app
  #      run: python -m PyInstaller --clean p2d.spec

  #    - name: Upload macOS artifact
  #      uses: actions/upload-artifact@v4
  #      with:
  #        name: p2d-macos
  #        path: dist/p2d.app

  create-release:
    needs: [build-windows]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: p2d-windows
          path: win

      - name: Create Windows zip
        run: |
          cd win
          zip -r ../p2d-windows.zip .
          cd ..

      #- name: Create macOS ZIP
      #  run: |
      #    cd p2d-macos
      #    zip -r ../p2d-macos.zip p2d.app
      #    cd ..

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            p2d-windows.zip
   #         p2d-macos.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
